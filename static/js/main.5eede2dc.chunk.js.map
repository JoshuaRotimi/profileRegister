{"version":3,"sources":["components/Navbar.js","components/Main.js","components/AppComponent.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","width","height","alt","src","concat","Identicon","toString","Component","Main","_this","role","style","maxWidth","onSubmit","e","preventDefault","firstName","value","lastName","createProfile","alert","action","htmlFor","type","name","ref","input","placeholder","abi","anonymous","inputs","indexed","internalType","constant","outputs","payable","stateMutability","components","AppComponent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","loading","state","profiles","methods","send","from","then","receipt","console","log","catch","err","message","getProfile","_ref","asyncToGenerator","regenerator_default","mark","_callee4","profileDetails","wrap","_context4","prev","next","sent","stop","_x","apply","arguments","loadWeb3","loadBlockChainData","window","ethereum","web3","Web3","enable","currentProvider","eth","getAccounts","accounts","net","getId","register","Contract","_this2","components_Navbar","components_Main","onClick","React","Boolean","location","hostname","match","ReactDOM","render","components_AppComponent","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5eede2dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"http://www.dappuniversity.com/bootcamp\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Profile Register\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            { this.props.account\n              ? <img\n                className='ml-2'\n                width='30'\n                height='30'\n                alt={'barcode'}\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n              />\n              : <span/>\n            }\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n            <div className=\"content mr-auto ml-auto\">\n              <p>&nbsp;</p>\n              <form onSubmit={(e) => {\n                e.preventDefault();\n                const firstName = this.firstName.value;\n                const lastName = this.lastName.value;\n                if (!firstName || !lastName) {\n                  alert('Please enter a valid name.')\n                } else {\n                  this.props.createProfile(firstName, lastName);\n                }\n              }} action=\"\">\n                <div className={'form-group mr-sm-2'}>\n                  <label className={'mr-2'} htmlFor=\"First Name\" >First Name: </label>\n                  <input type=\"text\"\n                         id={'firstName'}\n                         name={'First Name'}\n                         ref={(input => {this.firstName = input})}\n                         placeholder={'First Name...'}\n                         className={'form-control'}\n                  />\n                </div>\n                <div className={'form-group mr-sm-2'}>\n                  <label className={'mr-2'} htmlFor=\"Last Name\" >Last Name: </label>\n                  <input type=\"text\"\n                         name={'Last Name'}\n                         id={'lastName'}\n                         ref={(input => {this.lastName = input})}\n                         placeholder={'Last Name...'}\n                         className={'form-control'}\n                  />\n                </div>\n                <button className={'btn btn-primary'}>Create Profile</button>\n              </form>\n              <p>&nbsp;</p>\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;","import React from \"react\";\nimport Web3 from \"web3\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\n\nconst address = '0x006F599c0920A5b369dE668E0810e53a9F8b216D';\nconst abi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"lastname\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"firstname\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"name\":\"NewProfile\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ProfileIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Profiles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"lastname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"firstname\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REGISTRATION_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"lastname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"firstname\",\"type\":\"string\"}],\"name\":\"createProfile\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"lastname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"firstname\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"internalType\":\"struct Register.Profile\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"profileId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}];\n\nclass AppComponent extends React.Component {\n    async UNSAFE_componentWillMount () {\n        await this.loadWeb3();\n        await this.loadBlockChainData();\n    }\n\n    async loadWeb3 () {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable()\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            window.alert('No ethereum broswer detected. You can check out MetaMask!')\n        }\n    }\n\n    async loadBlockChainData () {\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        this.setState({account : accounts[0]});\n\n        const networkId = await web3.eth.net.getId();\n        if (networkId === 4) {\n            const register = new web3.eth.Contract(abi, address);\n            this.setState({ profiles: register});\n            this.setState({loading: false});\n\n        } else {\n            window.alert('Register Contract not deployed to detected network.')\n        }\n    }\n\n    createProfile = (firstName, lastName) => {\n        this.setState({loading: true});\n        this.state.profiles.methods.createProfile(firstName, lastName).send({from: this.state.account, value: 10000000000000000})\n            .then(receipt => {\n                console.log(receipt, \"Success\");\n                alert('Profile was added successfully')\n            }).catch(err => {\n            if (err) {\n                alert(`Error. ${err.message}`)\n            }\n        });\n        this.setState({loading: false});\n    };\n\n    getProfile = async (id) => {\n        this.setState({loading: true});\n        const profileDetails = await this.state.profiles.methods.getProfile(id).call();\n        if (profileDetails[0] === '') {\n            alert('Profile does not exist')\n        } else {\n            this.setState({profileDetails});\n        }\n        this.setState({loading: false});\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '',\n            profileDetails: null,\n            loading: true,\n            profiles: null\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar account={this.state.account} />\n                <div className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n                    <Main createProfile={this.createProfile} />\n\n                    <div className={'form-group mr-sm-2 my-5'}>\n                        <button className={'btn btn-secondary'} onClick={() => this.getProfile(this.state.account)}>Get Profile Details</button>\n                    </div>\n                    { this.state.loading && <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>}\n                    {this.state.profileDetails &&\n                    <div>\n                        <h3>Profile Details</h3>\n                        <h3>First Name: {this.state.profileDetails[0]}</h3>\n                        <h3>Last Name: {this.state.profileDetails[1]}</h3>\n                        <h3>ID: {this.state.profileDetails[2].toString()}</h3>\n                    </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AppComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\n// import App from './components/App';\nimport AppComponent from \"./components/AppComponent\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}